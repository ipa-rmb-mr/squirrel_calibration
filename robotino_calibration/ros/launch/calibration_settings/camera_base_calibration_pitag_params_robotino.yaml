# debugging value
#T_initial: [0.045, -0.129, -0.349, 2.955, -0.034, 0.023]

# Degrees of freedom of camera
# int
camera_dof: 2

### Observation positions for capturing calibration images of the pitags
# if this flag is true, then the robot configurations will be sampled on a equally spaced grid from the given ranges, if false, the user-provided configurations in robot_configurations will be used
# bool
use_range: true

# ranges for the degrees of freedom of the robot
# each parameter is set as [min_value, step, max_value]
# double
x_range: [-1.25, 0.25, -0.75]       # in [m]
y_range: [-1.0, 0.2, -0.6]          # in [m], fixed y-coordinate
phi_range: [0.0, 1.0, 0.0]          # in [rad], fixed phi-angle
camera_ranges: [-1.2, 0.2, 0.4,
                -0.8, 0.2, 0.2]     # first pan then tilt in [rad]

# list of robot configurations for observing the pitags measured relative to the landmark_reference_nav coordinate system that is similarly aligned as the robot's base_link facing the marker
# includes 5 parameters per entry: robot pose: x, y, phi and torso: pan, tilt
robot_configurations: [-1.5, -0.17, 0, 0.15, 0.25,
                       -1.5, -0.17, 0, 0.0, 0.3,
                       -1.5, -0.17, 0, -0.15, 0.3,
                       -1.5, -0.17, 0, -0.3, 0.3,
                       -1.5, -0.17, 0, -0.5, 0.3,
                       -1.5, -0.17, 0, 0.15, 0.05,
                       -1.5, -0.17, 0, 0.0, 0.05,
                       -1.5, -0.17, 0, -0.15, 0.05,
                       -1.5, -0.17, 0, -0.3, 0.05,
                       -1.5, -0.17, 0, -0.5, 0.05,
                       -1.5, -0.17, 0, 0.15, -0.2,
                       -1.5, -0.17, 0, 0.0, -0.2,
                       -1.5, -0.17, 0, -0.15, -0.2,
                       -1.5, -0.17, 0, -0.35, -0.2,
                       -1.5, -0.17, 0, -0.5, -0.2,
                       -1.0, -0.17, 0, 0.0, 0.2,
                       -1.0, -0.17, 0, -0.2, 0.2,
                       -1.0, -0.17, 0, -0.45, 0.2,
                       -1.0, -0.17, 0, 0.0, 0.05,
                       -1.0, -0.17, 0, -0.2, 0.05,
                       -1.0, -0.17, 0, -0.45, 0.05,
                       -1.0, -0.17, 0, 0.0, -0.15,
                       -1.0, -0.17, 0, -0.2, -0.15,
                       -1.0, -0.17, 0, -0.45, -0.15,
                       -0.85, -0.17, 0, 0.0, 0.15,
                       -0.85, -0.17, 0, -0.15, 0.15,
                       -0.85, -0.17, 0, -0.35, 0.2,
                       -0.85, -0.17, 0, 0.0, 0.05,
                       -0.85, -0.17, 0, -0.15, 0.05,
                       -0.85, -0.17, 0, -0.35, 0.05,
                       -0.85, -0.17, 0, 0.0, -0.1,
                       -0.85, -0.17, 0, -0.15, -0.1,
                       -0.85, -0.17, 0, -0.35, -0.1]


### Robot link and topic names
# the robot base frame, needed for security measure (it's the reference frame to check the child_frame against before moving the robot)
base_frame: "base_linkz"

# this is the camera coordinate system which refers to the color image sensor [the transformations between camera_frame and camera_optical_frame should be available from tf]
camera_optical_frame: "kinect_rgb_optical_frame"

# the transformations between base_frame and the first entry of the uncertainties list and the last entry and camera_optical_frame has to be be available from TF
# the list contains couples from parent to child. Each couple defines an uncertainty in the kinematic chain which will be calibrated by the program
# the list must be in order, i.e. uncertainties earlier in the list must also be earlier in the kinematic chain
# take into account that the transformations between the uncertainties have to be available from TF as well
uncertainties_list: ["base_linkz","base_neck_link",
                     "neck_tilt_link","kinect_link"]

# defines the order in which the uncertainties will be calibrated
# each couple or uncertainty in the uncertainties_list increases the calibration_order list
# the value represents the index of an uncertainty in the uncertainties_list and the position of the index in the calibration_order list defines the actual order
# i.e. the first element in the calibration_order will be calibrated first, then comes the second element and so on...
# the more uncertain a transform is the earlier should its index be placed in the calibration_order list
# so the index of the most uncertain transform should be the first element here
calibration_order: [1,2]

# base name of all frames generated by cob_fiducials, each Pi tag number will be attached to this string.
marker_frame_base_name: "tag"

# The name of the reference frame. Has to match the entry found in the relative_localization yaml files.
# string
child_frame_name: "/landmark_reference_nav"


### Program sequence
# loads calibration images and transforms from disk if set to true
# bool
load_images: false

# number of optimization iterations
# int
optimization_iterations: 1000

# storage folder that holds the calibration output
# string
calibration_storage_path: "robotino_calibration/camera_pitag_calibration"

# fiducials topic
# string
get_fiducials: "/fiducials/get_fiducials"
